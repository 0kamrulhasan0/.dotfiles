set spelllang=en_us
set nospell
set enc=utf-8
set autoread
set history=2000
set path+=**
set wildmenu
set nobackup
set noswapfile
set noundofile
set cursorline
set relativenumber
set colorcolumn=70
nnoremap <F2> :set relativenumber!<CR>
nnoremap <F3> :setlocal spell! <CR>
set pastetoggle=<F4>
set clipboard=unnamedplus
set termwinsize=13x200

set smartindent
set tabstop=2
set shiftwidth=2
set expandtab
set hidden
set incsearch
set mouse+=a
set foldmethod=indent
set foldlevel=99
set showmode
set autowrite
set showmatch
set matchpairs+=<:>

set t_Co=256
set laststatus=2
set backspace=indent,eol,start
set splitbelow
set splitright

set shortmess+=I
set noerrorbells visualbell t_vb=
" Default - elflord or koehler
" Custom  - molokai or gruvbox
silent! colorscheme molokai
silent! colorscheme elflord
silent! colorscheme gruvbox
syntax on

" Save
let mapleader=" "
nnoremap <silent><leader>f :w <CR>
nnoremap <silent><leader>d :q! <CR>
nnoremap <silent><leader>t :terminal <CR>
"Scrolling
nnoremap K <C-U>
nnoremap J <C-D>
vnoremap L $
vnoremap H 0
nnoremap L $
nnoremap H 0
" Windows Movement
" :tabn               new tab
" :tabe               edit tab
" :tabc               close new tab
" gt                  next tab
" gT                  previous tab

"NERDTree like View
let g:netrw_list_hide = '^\.\.\=/\=$,.DS_Store,.idea,.git,__pycache__,venv,node_modules,*\.o,*\.pyc,.*\.swp'
let g:netrw_hide = 1
let g:netrw_banner = 0
let g:netrw_liststyle = 3
"let g:netrw_browse_split = 4
let g:netrw_altv = 1
"let g:netrw_winsize = 20
nnoremap <C-n> :Lex<CR>

" Disabling Arrow Keys to Avoid Using Them
no <up> <Nop>
no <down> <Nop>
no <right> <Nop>
no <left> <Nop>
ino <up> <Nop>
ino <down> <Nop>
ino <right> <Nop>
ino <left> <Nop>
vno <up> <Nop>
vno <down> <Nop>
vno <right> <Nop>
vno <left> <Nop>

"Flagging Unnecessary Whitespace
"highlight BadWhitespace ctermbg=red guibg=darkred
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match Cursor /\s\+$/

" Automatically closing braces
inoremap {<CR> {<CR>}<Esc>ko<tab>
inoremap [<CR> [<CR>]<Esc>ko<tab>
inoremap (<CR> (<CR>)<Esc>ko<tab>
inoremap "<CR> ""<Esc>i<tab>
inoremap '<CR> ''<Esc>i<tab>
inoremap `<CR> ``<Esc>i<tab>

"Linux Specific Settings
"set shell=bash
"------------------------------ Compile and Run Shortcut ------------------------------
"" To run profiler: time ./a.out
autocmd filetype c nnoremap <silent><leader>e :w <bar> exec '!clear; clang -Wall -std=c17 -pedantic % -o %:r.out; ./%:r.out'<CR>
autocmd filetype cpp nnoremap <silent><leader>e :w <bar> exec '!clear; clang++ -Wall -std=c++20 % -o %:r.out; ./%:r.out'<CR>
autocmd filetype python nnoremap <silent><leader>e :w <bar> exec '!clear; black %; python %'<CR>
autocmd filetype javascript nnoremap <silent><leader>e :w <bar> exec '!clear; node %'<CR>
autocmd filetype make nnoremap <silent><leader>e :w <bar> exec '!clear; make'<CR>
autocmd filetype sh nnoremap <silent><leader>e :w <bar> exec '!clear; bash %'<CR>


autocmd filetype c,cpp nnoremap <silent><leader>c :w <bar> exec '!clear; rm -f %:r.out; echo Binary is Cleared...'<CR>
autocmd filetype make nnoremap <silent><leader>c :w <bar> exec '!clear; make clean'<CR>
autocmd bufwritepost .vimrc source $MYVIMRC
"---------------------------------- Statusbar ---------------------------------
set statusline=
set statusline+=%#DiffAdd#%{(mode()=='n')?'\ \ NORMAL\ ':''}
set statusline+=%#DiffChange#%{(mode()=='i')?'\ \ INSERT\ ':''}
set statusline+=%#DiffDelete#%{(mode()=='r')?'\ \ REPLACE\ ':''}
set statusline+=%#Cursor#%{(mode()=='v')?'\ \ VISUAL\ ':''}
set statusline+=\ %n\                                     " buffer number
set statusline+=%#Visual#                                 " colour
set statusline+=%{&paste?'\ PASTE\ ':''}
set statusline+=%{&spell?'\ SPELL\ ':''}
set statusline+=%#CursorIM#                               " colour
set statusline+=%R                                        " readonly flag
set statusline+=\ %M\                                       " modified [+] flag
set statusline+=%#Cursor#                                 " colour
set statusline+=%#CursorLine#                             " colour
set statusline+=\%4*\ %<%F%*\                             " full file name
set statusline+=%=                                        " right align
set statusline+=%#CursorLine#                             " colour
set statusline+=%3*\ %{''.(&fenc!=''?&fenc:&enc).''}      " Encoding
set statusline+=%3*\ %{(&bomb?\",BOM\":\"\")}\            " Encoding2
set statusline+=\ %Y\                                     " file type
set statusline+=%#CursorIM#                               " colour
set statusline+=\ %3l/%L\                                 " line number / Total
set statusline+=%#Cursor#                                 " colour
" set statusline+=\ %3p%%\                                " percentage
" Comment This Part to use this without plugin
" --------------------------------- Vundle ---------------------------------
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'ycm-core/YouCompleteMe'
Plugin 'junegunn/goyo.vim'
Plugin 'sillybun/vim-repl'
Plugin 'Chiel92/vim-autoformat'
Plugin 'junegunn/fzf', { 'do': { -> fzf#install() }}
Plugin 'junegunn/fzf.vim'
" Plugin 'tpope/vim-fugitive'                           "Git diff, Git add, Git commit, GStatus, Gdiffsplit
call vundle#end()
filetype plugin indent on
"---------------------------------  Goyo Settings ----------------------------
nnoremap <silent><leader>z :Goyo<CR>
let g:goyo_width = '95%'
let g:goyo_height = '85%'
function! s:goyo_enter()
  if executable('tmux') && strlen($TMUX)
    silent !tmux set status off
    silent !tmux list-panes -F '\#F' | grep -q Z || tmux resize-pane -Z
  endif
  set noshowmode
  set noshowcmd
  set scrolloff=999
endfunction

function! s:goyo_leave()
  if executable('tmux') && strlen($TMUX)
    silent !tmux set status on
    silent !tmux list-panes -F '\#F' | grep -q Z && tmux resize-pane -Z
  endif
  set showmode
  set showcmd
  set scrolloff=5
endfunction

autocmd! User GoyoEnter nested call <SID>goyo_enter()
autocmd! User GoyoLeave nested call <SID>goyo_leave()

" Python REPL Settings
let g:repl_program = {'python': ['python3.8'], 'default': ['bash']}
nnoremap <silent><leader>r :REPLToggle<Cr>
nnoremap <silent><leader>w :SendCurrentLine<Cr>

" FZF - Fuzzy Finder
let g:fzf_preview_window = ['right:50%', 'ctrl-/']
nnoremap <silent><leader>o :FZF<cr>

" Autoformatter
autocmd BufWritePre *.c,*.cpp,*.cs*.py,*.js,*.ts,*.css,*.json,*.md,*.yaml,*.html,*.sql execute ':Autoformat'
